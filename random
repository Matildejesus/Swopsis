// hooks/auth/useUser.ts
import { useQuery, useQueryClient } from "@tanstack/react-query";
import { useEffect } from "react";
import { getUser } from "../../services/apiAuth";
import supabase from "../../services/supabase";

export function useUser() {
  const qc = useQueryClient();

  const { data: user, isLoading, error } = useQuery({
    queryKey: ["user"],
    queryFn: getUser,
    // no stale window so foreground invalidation actually refetches
    staleTime: 0,
    refetchOnReconnect: true,
    refetchOnMount: "always",
  });

  useEffect(() => {
    const { data: { subscription } } = supabase.auth.onAuthStateChange((_e, session) => {
      qc.setQueryData(["user"], session?.user ?? null);
    });
    return () => subscription.unsubscribe();
  }, [qc]);

  return { isLoading, user, error, isAuthenticated: !!user?.id };
}
